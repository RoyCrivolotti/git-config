[user]
	email = roycrivolotti@gmail.com
	name = Roy Crivolotti

[alias]
	co = checkout
	cob = checkout -b
	c = commit
	ce = ! git commit -m \"Empty commit\" --allow-empty
	a = add
	s = status
	d = diff
	getremote = ! git config --get remote.origin.url
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
	## TODO Add prints with the commands being ran
	## TODO exclude current branch from 'listmerged': wrap the command in a shell function, save the current branch name to a variable and exclude it with '-v -e'
	listmerged = ! git branch --merged | grep -v -e master -e develop ## Find all (still existing) local branches that have been merged into master excluding master and develop (always includes current branch)
	cleanmerged = ! git branch --merged | grep -v -e master -e develop -e main | xargs git branch -d ## Delete all local branches that have been merged into master excluding master/main and develop
	# cleanremote = ! git branch -r --merged develop | grep 'origin/' | egrep -v '(^\\*|master|main|develop)' | sed 's/origin\\/*//' | xargs git push origin -d ## Delete all remote branches that have been merged into master excluding master/main and develop
	lsdiff = diff --name-status ## List files which differ with remote
	lsdiffbranch = "!f() { if [ -z \"$1\" ]; then echo \"Input which branch to compare against\"; else git diff --name-status \"$1\"; fi }; f" ## List files which differ between two branches
	diffr = "!f() { currBranch=`git branch --no-color 2> /dev/null | sed -e '/^[^*]/d'`; currBranch="${currBranch:2}"; git diff origin/$currBranch; }; f" ## Diff between the current branch's local and remote
	diffrf = !f() { if [ -z "$1" ]; then echo "Error: Missing file path."; else currBranch=$(git branch --show-current); git diff origin/$currBranch -- "$1"; fi; }; f ## Diff between the current branch's local and remote for a specific file
	cmlocal = "!f() { git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == \"gone\" {sub(\"refs/heads/\", \"\", $1); print $1}'); do git branch -D $branch; done }; f" ## Remove local branches with no remote
	diffrf_name = !f() { \
  		if [ -z "$1" ]; then \
    		echo "Error: Missing file name."; \
  		else \
    		files=$(find . -type f -name "$1"); \
    		count=$(echo "$files" | grep -c /); \
    		if [ "$count" -eq "0" ]; then \
      			echo "Error: File not found."; \
    		elif [ "$count" -eq "1" ]; then \
      			currBranch=$(git branch --show-current); \
      			git diff origin/$currBranch -- "$files"; \
    		else \
      			echo "Error: Multiple files found with the name '$1'. Please specify a more specific path."; \
      			echo "$files"; \
    		fi; \
  		fi; \
	}; f ## Diff between the current branch's local and remote for a specific file name

